---
- name: Setup PostgreSQL Docker Container with Python Virtual Environment
  hosts: postgres_and_redis
  become: true
  vars:
    postgres_db: test_db  # Replace with your database name
    postgres_user: test_user  # Replace with your username
    postgres_password: test_password  # Replace with your password
    docker_network: test-pg-network  # Name of the Docker network
    postgres_container_name: test-postgres  # Name of the PostgreSQL container
    mount_point: /mnt/storage  # External storage location for PostgreSQL data
    pgdata_directory: "{{ mount_point }}/pgdata"  # Directory on disk to bind mount
    venv_path: /opt/venv_ansible_docker  # Path to the Python virtual environment
  
  tasks:
    - name: Ensure Python 3, venv, and Docker are installed
      apt:
        name: 
          - python3
          - python3-pip
          - python3-venv      # Ensure venv is installed for creating virtual environments
          - docker.io         # Install Docker
        state: present

    - name: Create a Python Virtual Environment
      command: python3 -m venv {{ venv_path }}
      args:
        creates: "{{ venv_path }}/bin/activate"  # Idempotent task, only create if not exists

    - name: Install Docker SDK in the virtual environment (via pip)
      command: "{{ venv_path }}/bin/pip install docker"
      environment:
        PATH: "{{ venv_path }}/bin:{{ ansible_env.PATH }}"  # Use venv's pip
        
    - name: Start Docker service
      systemd:
        name: docker
        state: started
        enabled: true

    - name: Ensure Docker network exists
      docker_network:
        name: "{{ docker_network }}"
        state: present

    - name: Ensure the pgdata directory exists on the mounted drive
      ansible.builtin.file:
        path: "{{ pgdata_directory }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Run PostgreSQL container
      docker_container:
        name: "{{ postgres_container_name }}"
        image: postgres
        restart_policy: always
        network_mode: "{{ docker_network }}"
        ports:
          - "5432:5432"
        volumes:
          - "{{ pgdata_directory }}:/var/lib/postgresql/data"  # Bind mount storage
        env:
          POSTGRES_DB: "{{ postgres_db }}"
          POSTGRES_USER: "{{ postgres_user }}"
          POSTGRES_PASSWORD: "{{ postgres_password }}"
        state: started
      environment:
        PATH: "{{ venv_path }}/bin:{{ ansible_env.PATH }}"  # Use venv's path for Docker SDK
